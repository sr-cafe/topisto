{"version":3,"sources":["../../src/core/comment.es6"],"names":[],"mappings":";;;;;;;;AAAA;;IAAY;;;;;;IAES;;;gCACC,OAAO,OAAO,YAAY,YAAW;;AAEzD,OAAI,UAAU,IAAV;OACH,OAAO,MAAM,IAAN,EAAP;OACA,cAAc,MAAM,QAAN,CAAe,MAAf,CAAsB,UAAS,OAAT,EAAiB;AACpD,WAAO,QAAQ,OAAR,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,IAA3B,CAAP,CADoD;IAAjB,CAApC,CAJwD;;AAQzD,OAAG,YAAY,MAAZ,EAAmB;AACrB,kBAAc,YAAY,CAAZ,CAAd,CADqB;IAAtB,MAGI;AACH,kBAAc,IAAd,CADG;IAHJ;;AAOA,OAAG,WAAH,EAAe;AACd,QAAG,YAAY,IAAZ,KAAqB,SAAS,gBAAT,EAA0B;AACjD,eAAU,QAAQ,uBAAR,CAAgC,KAAhC,EAAuC,UAAvC,CAAV,CADiD;KAAlD,MAGI;AACH,eAAU,QAAQ,sBAAR,CACT,KADS,EAET,UAFS,EAGT,WAHS,EAIT,UAJS,CAAV,CADG;KAHJ;IADD;;AAcA,UAAO,QAAQ,mBAAR,CAA4B,OAA5B,EAAqC,WAArC,EAAkD,MAAM,QAAN,CAAzD,CA7ByD;;;;0CAgC3B,SAAS,YAAW;AAClD,UAAO,IAAI,OAAJ,CACN,SAAS,gBAAT,EACA,OAFM,EAGN;AACC,WAAO,UAAP;AACA,SAAK,UAAL;IALK,CAAP,CADkD;;;;yCAWrB,OAAO,WAAW,MAAM,YAAW;AAChE,OAAI,UAAU,KAAK,OAAL,CAAa,GAAb;OACb,YAAY,WAAW,KAAX,CAAiB,SAAjB,CAAZ;OACA,2BAFD;OAGC,gBAHD,CADgE;;AAM/D,aAAU,IAAV,CAAe,UAAS,IAAT,EAAe,CAAf,EAAkB;AAChC,WAAO,QAAQ,IAAR,CAAa,KAAK,IAAL,EAAb,KACH,kBAAC,GAAqB,CAArB,EAAyB,IAA1B,CADG,GAEJ,KAFI,CADyB;IAAlB,CAAf,CAN+D;;AAY/D,OAAI,QAAQ;AACX,WAAO,SAAP;AACA,SAAK,YAAY,kBAAZ;IAFF,CAZ2D;;AAiB/D,OAAI,UAAU,WAAW,KAAX,CAAiB,MAAM,KAAN,EAAa,MAAM,GAAN,GAAY,CAAZ,CAAxC;;;AAjB2D,QAoB3D,IAAI,IAAI,MAAM,KAAN,GAAc,CAAd,EAAiB,KAAK,MAAM,GAAN,EAAW,GAA7C,EAAiD;AAChD,eAAW,CAAX,IAAgB,EAAhB,CADgD;IAAjD;;AAIA,OAAG,QAAQ,MAAR,GAAiB,CAAjB,EAAmB;AACrB,cAAU,IAAI,OAAJ,CAAY,SAAS,eAAT,EAA0B,OAAtC,EAA+C,KAA/C,CAAV,CADqB;IAAtB,MAGI;AACH,cAAU,IAAI,OAAJ,CAAY,SAAS,gBAAT,EAA2B,QAAQ,CAAR,CAAvC,EAAmD,KAAnD,CAAV,CADG;IAHJ;;AAOA,UAAO,OAAP,CA/B+D;;;;sCAkCtC,SAAS,MAAM,WAAU;AACnD,OAAG,IAAH,EAAQ;AACP,QAAG,QAAQ,IAAR,KAAiB,SAAS,gBAAT,EAA0B;AAC7C,SAAI,WAAW,CAAC,KAAK,OAAL,CAAa,KAAb,CAAZ,CADyC;AAE7C,SAAG,SAAH,EAAa;AACZ,iBAAW,SAAS,MAAT,CAAgB,SAAhB,CAAX,CADY;MAAb;AAGA,aAAQ,OAAR,GAAkB,QAAQ,gBAAR,CAAyB,QAAQ,OAAR,EAAiB,QAA1C,CAAlB,CAL6C;KAA9C,MAOI;AACH,aAAQ,OAAR,GAAkB,QAAQ,OAAR,CAAgB,GAAhB,CAAoB,UAAS,IAAT,EAAe,KAAf,EAAsB,KAAtB,EAA4B;AACjE,UAAI,WAAW,EAAX,CAD6D;AAEjE,UAAG,UAAU,CAAV,EAAY;AACd,gBAAS,IAAT,CAAc,KAAK,OAAL,CAAa,KAAb,CAAd,CADc;OAAf;;AAIA,UAAG,UAAU,MAAM,MAAN,GAAc,CAAd,EAAgB;AAC5B,gBAAS,IAAT,CAAc,KAAK,OAAL,CAAa,GAAb,CAAd,CAD4B;OAA7B;;AAIA,UAAG,SAAH,EAAa;AACZ,kBAAW,SAAS,MAAT,CAAgB,SAAhB,CAAX,CADY;OAAb;;AAIA,aAAO,QAAQ,gBAAR,CAAyB,IAAzB,EAA+B,QAA/B,CAAP,CAdiE;MAA5B,CAApB,CAgBf,MAhBe,CAgBR,UAAS,IAAT,EAAc;AACvB,aAAO,KAAK,IAAL,GAAY,MAAZ,GAAqB,CAArB,CADgB;MAAd,CAhBV,CADG;KAPJ;IADD;;AA+BA,UAAO,OAAP,CAhCmD;;;;mCAmC5B,MAAM,UAAS;AACtC,UAAO,SAAS,MAAT,CAAgB,UAAS,QAAT,EAAmB,OAAnB,EAA2B;AACjD,WAAO,SAAS,OAAT,CAAiB,OAAjB,EAA0B,EAA1B,EAA8B,IAA9B,EAAP,CADiD;IAA3B,EAEpB,KAAK,IAAL,EAFI,CAAP,CADsC;;;;AAMvC,UAvHoB,OAuHpB,CAAY,IAAZ,EAAkB,OAAlB,EAA2B,KAA3B,EAAiC;wBAvHb,SAuHa;;AAChC,OAAK,IAAL,GAAY,IAAZ,CADgC;AAEhC,OAAK,eAAL,GAAuB,OAAvB,CAFgC;AAGhC,OAAK,OAAL,GAAe,OAAf,CAHgC;AAIhC,OAAK,KAAL,GAAa,KAAb,CAJgC;EAAjC;;QAvHoB","file":"comment.js","sourcesContent":["import * as PATTERNS from './patterns';\n\nexport default class Comment{\n\tstatic createComment(rules, _text, lineNumber, linesArray){\n\n\t\tlet comment = null,\n\t\t\ttext = _text.trim(),\n\t\t\tcommentRule = rules.matchers.filter(function(matcher){\n\t\t\t\treturn matcher.pattern.start.test(text);\n\t\t\t});\n\n\t\tif(commentRule.length){\n\t\t\tcommentRule = commentRule[0];\n\t\t}\n\t\telse{\n\t\t\tcommentRule = null;\n\t\t}\n\n\t\tif(commentRule){\n\t\t\tif(commentRule.type === PATTERNS.LINE_TYPE_SINGLE){\n\t\t\t\tcomment = Comment.createSingleLineComment(_text, lineNumber);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tcomment = Comment.createMultilineComment(\n\t\t\t\t\t_text,\n\t\t\t\t\tlineNumber,\n\t\t\t\t\tcommentRule,\n\t\t\t\t\tlinesArray\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn Comment.cleanCommentContent(comment, commentRule, rules.cleaners);\n\t}\n\n\tstatic createSingleLineComment(content, lineNumber){\n\t\treturn new Comment(\n\t\t\tPATTERNS.LINE_TYPE_SINGLE,\n\t\t\tcontent,\n\t\t\t{\n\t\t\t\tstart: lineNumber,\n\t\t\t\tend: lineNumber\n\t\t\t}\n\t\t);\n\t}\n\n\tstatic createMultilineComment(_text, startLine, rule, linesArray){\n\t\tlet matcher = rule.pattern.end,\n\t\t\tscanLines = linesArray.slice(startLine),\n\t\t\tclosingCommentLine,\n\t\t\tcomment;\n\n\t\t\tscanLines.some(function(line, i) {\n\t\t\t\treturn matcher.test(line.trim())\n\t\t\t\t\t? ((closingCommentLine = i), true)\n\t\t\t\t\t: false;\n\t\t\t});\n\n\t\t\tlet range = {\n\t\t\t\tstart: startLine,\n\t\t\t\tend: startLine + closingCommentLine\n\t\t\t};\n\n\t\t\tlet content = linesArray.slice(range.start, range.end + 1);\n\n\t\t\t// Overwrite those lines on the original array so we don't need to scan them\n\t\t\tfor(let i = range.start + 1; i <= range.end; i++){\n\t\t\t\tlinesArray[i] = '';\n\t\t\t}\n\n\t\t\tif(content.length > 1){\n\t\t\t\tcomment = new Comment(PATTERNS.LINE_TYPE_MULTI, content, range);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tcomment = new Comment(PATTERNS.LINE_TYPE_SINGLE, content[0], range);\n\t\t\t}\n\n\t\t\treturn comment;\n\t}\n\n\tstatic cleanCommentContent(comment, rule, _cleaners){\n\t\tif(rule){\n\t\t\tif(comment.type === PATTERNS.LINE_TYPE_SINGLE){\n\t\t\t\tlet cleaners = [rule.pattern.start];\n\t\t\t\tif(_cleaners){\n\t\t\t\t\tcleaners = cleaners.concat(_cleaners);\n\t\t\t\t}\n\t\t\t\tcomment.content = Comment.cleanCommentLine(comment.content, cleaners);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tcomment.content = comment.content.map(function(line, index, array){\n\t\t\t\t\tlet cleaners = [];\n\t\t\t\t\tif(index === 0){\n\t\t\t\t\t\tcleaners.push(rule.pattern.start);\n\t\t\t\t\t}\n\n\t\t\t\t\tif(index === array.length -1){\n\t\t\t\t\t\tcleaners.push(rule.pattern.end);\n\t\t\t\t\t}\n\n\t\t\t\t\tif(_cleaners){\n\t\t\t\t\t\tcleaners = cleaners.concat(_cleaners);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Comment.cleanCommentLine(line, cleaners);\n\n\t\t\t\t}).filter(function(line){\n\t\t\t\t\treturn line.trim().length > 0;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn comment;\n\t}\n\n\tstatic cleanCommentLine(line, cleaners){\n\t\treturn cleaners.reduce(function(previous, current){\n\t\t\treturn previous.replace(current, '').trim();\n\t\t}, line.trim());\n\t}\n\n\tconstructor(type, content, range){\n\t\tthis.type = type;\n\t\tthis.originalContent = content;\n\t\tthis.content = content;\n\t\tthis.range = range;\n\t}\n}\n"]}